{"ast":null,"code":"var _jsxFileName = \"/home/stin/School/Treblecross/src/pages/Home.tsx\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonItem, IonRange, IonButton } from '@ionic/react';\nimport React from 'react';\nimport './Home.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfBoards: 1,\n      boardState: [],\n      boardSizeArray: []\n    };\n    this.generateTrebleCrossBoard = this.generateTrebleCrossBoard.bind(this);\n  }\n\n  generateTrebleCrossBoard() {\n    let tempBoardSizeArray = [];\n    let tempBoardState = [];\n\n    for (let i = 0; i < this.state.numberOfBoards; i++) {\n      //creates a board of size 1 to 14\n      tempBoardSizeArray.push(Math.floor(Math.random() * Math.floor(14)) + 1);\n      tempBoardState.push(new Array(tempBoardSizeArray[i]).fill(false));\n    }\n\n    this.setState({\n      boardState: tempBoardState,\n      boardSizeArray: tempBoardSizeArray\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(IonPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IonHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonToolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Treblecross\"))), /*#__PURE__*/React.createElement(IonContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonItem, {\n      id: \"rangeSliderItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonRange, {\n      id: \"rangeSlider\",\n      onIonChange: e => {\n        this.setState({\n          numberOfBoards: e.detail.value\n        });\n      },\n      min: 1,\n      max: 5,\n      step: 1,\n      snaps: true,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      id: \"numBoardsLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"Number of Treblecross boards selected: \", +this.state.numberOfBoards), /*#__PURE__*/React.createElement(IonButton, {\n      id: \"generateBoards\",\n      onClick: () => {\n        this.generateTrebleCrossBoard();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Generate Boards\"), this.state.boardState.map(Board => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 47\n      }\n    }, Board.map(Square => /*#__PURE__*/React.createElement(\"button\", {\n      className: \"square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, Square ? 'x' : ''))))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/stin/School/Treblecross/src/pages/Home.tsx"],"names":["IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonItem","IonRange","IonButton","React","Home","Component","constructor","props","state","numberOfBoards","boardState","boardSizeArray","generateTrebleCrossBoard","bind","tempBoardSizeArray","tempBoardState","i","push","Math","floor","random","Array","fill","setState","render","e","detail","value","map","Board","Square"],"mappings":"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","sourcesContent":["import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonItem, IonRange, IonButton } from '@ionic/react';\nimport React from 'react';\nimport ExploreContainer from '../components/ExploreContainer';\nimport './Home.css';\n\ntype MyState = {\n  numberOfBoards: any;\n  boardState: boolean[][];\n  boardSizeArray: number[]\n}\n\ntype MyProps = {\n\n}\n\nclass Home extends React.Component<MyProps,MyState> {\n  constructor(props: MyProps) {\n    super(props)\n\n    this.state = {\n      numberOfBoards: 1,\n      boardState: [],\n      boardSizeArray: []\n    }\n\n    this.generateTrebleCrossBoard = this.generateTrebleCrossBoard.bind(this);\n  }\n\n\n\n\n  generateTrebleCrossBoard() {\n    let tempBoardSizeArray = []\n    let tempBoardState = []\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n      //creates a board of size 1 to 14\n      tempBoardSizeArray.push(Math.floor(Math.random() * Math.floor(14))+1)\n      tempBoardState.push(new Array(tempBoardSizeArray[i]).fill(false))\n    }\n    this.setState({boardState: tempBoardState, boardSizeArray: tempBoardSizeArray})\n\n  }\n\n  render() {\n    return (\n      <IonPage>\n        <IonHeader>\n          <IonToolbar>\n            <IonTitle>Treblecross</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n\n\n          <IonItem id='rangeSliderItem'>\n            <IonRange id='rangeSlider' onIonChange={e => {this.setState({numberOfBoards: e.detail.value})}} min={1} max={5} step={1} snaps={true} color=\"secondary\" />\n          </IonItem>\n          <h2 id='numBoardsLabel'>Number of Treblecross boards selected: {+ this.state.numberOfBoards}</h2>\n          <IonButton id='generateBoards' onClick={() => {this.generateTrebleCrossBoard()}}>Generate Boards</IonButton>\n\n          {this.state.boardState.map(Board => <div>{\n            Board.map(Square =>\n              <button className=\"square\">{Square ? 'x' : ''}</button>\n            )\n          }</div>\n          )}\n\n        </IonContent>\n      </IonPage>\n    );\n  }\n}\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}