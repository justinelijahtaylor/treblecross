{"ast":null,"code":"import _classCallCheck from\"/home/stin/School/Treblecross/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/stin/School/Treblecross/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/stin/School/Treblecross/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/stin/School/Treblecross/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/stin/School/Treblecross/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{IonContent,IonHeader,IonPage,IonTitle,IonToolbar,IonItem,IonRange,IonButton}from'@ionic/react';import React from'react';import'./Home.css';var Home=/*#__PURE__*/function(_React$Component){_inherits(Home,_React$Component);var _super=_createSuper(Home);function Home(props){var _this;_classCallCheck(this,Home);_this=_super.call(this,props);_this.state={numberOfBoards:1,boardState:[],boardSizeArray:[],boardBruteForce:[],gameOver:false,computerWins:false};_this.generateTrebleCrossBoard=_this.generateTrebleCrossBoard.bind(_assertThisInitialized(_this));_this.updateBoardState=_this.updateBoardState.bind(_assertThisInitialized(_this));_this.computersTurn=_this.computersTurn.bind(_assertThisInitialized(_this));_this.calculateHeaps=_this.calculateHeaps.bind(_assertThisInitialized(_this));_this.calculateNimSum=_this.calculateNimSum.bind(_assertThisInitialized(_this));_this.doesWinningMoveExist=_this.doesWinningMoveExist.bind(_assertThisInitialized(_this));return _this;}_createClass(Home,[{key:\"generateTrebleCrossBoard\",value:function generateTrebleCrossBoard(){var tempBoardSizeArray=[];var tempBoardState=[];for(var i=0;i<this.state.numberOfBoards;i++){//creates a board of size 1 to 14\ntempBoardSizeArray.push(Math.floor(Math.random()*Math.floor(8))+5);tempBoardState.push(new Array(tempBoardSizeArray[i]).fill(false));}this.setState({boardState:tempBoardState,boardSizeArray:tempBoardSizeArray,gameOver:false,computerWins:false});}},{key:\"updateBoardState\",value:function updateBoardState(boardIndex,squareIndex){if(this.state.boardState[boardIndex][squareIndex]!==true&&this.state.gameOver!==true){var tempBoardState=this.state.boardState;tempBoardState[boardIndex][squareIndex]=true;this.setState({boardState:tempBoardState});var win=this.didPlayerWin();if(win!=true){this.computersTurn();}}}},{key:\"calculateHeaps\",value:function calculateHeaps(boardState){var evaluationArray=[];var tempEvalArray=[];var heapSize=0;//need to see all heaps\nfor(var i=0;i<this.state.numberOfBoards;i++){heapSize=0;for(var j=0;j<this.state.boardSizeArray[i];j++){if(boardState[i][j]===false){heapSize=heapSize+1;if(j===0){heapSize=heapSize+1;}}else{//we hit an X\nif(heapSize!==0){heapSize=heapSize-1;}if(heapSize!==0){tempEvalArray.push(heapSize);}heapSize=-1;}}if(heapSize===this.state.boardSizeArray[i]){heapSize=heapSize+2;tempEvalArray.push(heapSize);heapSize=0;}else{if(heapSize!==0&&heapSize!==-1){heapSize=heapSize+1;tempEvalArray.push(heapSize);heapSize=0;}}evaluationArray.push(tempEvalArray);tempEvalArray=[];}return evaluationArray;}},{key:\"calculateNimSum\",value:function calculateNimSum(evaluationArray){var heapValues=[0,0,0,1,1,1,2,2,0,3,3,1,1,1,0];var nimValueArray=evaluationArray.map(function(board_heaps){return board_heaps.map(function(heap){return heapValues[heap];});});var sum=0;for(var i=0;i<this.state.numberOfBoards;i++){for(var j=0;j<nimValueArray[i].length;j++){if(nimValueArray[i][j]){sum=sum^nimValueArray[i][j];}}}return sum;}},{key:\"doesWinningMoveExist\",value:function doesWinningMoveExist(){var sentinel=true;var winningMove=[-1,-1];for(var i=0;i<this.state.numberOfBoards;i++){for(var j=0;j<this.state.boardSizeArray[i];j++){if(this.state.boardState[i][j]===true){if(j-1>-1){if(this.state.boardState[i][j-1]===true){sentinel=false;if(j-2>-1){winningMove=[i,j-2];}else{winningMove=[i,j+1];}}}if(j-2>-1){if(this.state.boardState[i][j-2]===true){sentinel=false;winningMove=[i,j-1];}}if(j+1<this.state.boardState[i].length){if(this.state.boardState[i][j+1]===true){sentinel=false;if(j+2<this.state.boardState[i].length){winningMove=[i,j+2];}else{winningMove=[i,j-1];}}}if(j+2<this.state.boardState[i].length){if(this.state.boardState[i][j+2]===true){sentinel=false;winningMove=[i,j+1];}}}}}return winningMove;}},{key:\"didPlayerWin\",value:function didPlayerWin(){var win=false;for(var i=0;i<this.state.numberOfBoards;i++){for(var j=0;j<this.state.boardSizeArray[i];j++){if(this.state.boardState[i][j]===true){if(j+1<this.state.boardSizeArray[i]&&this.state.boardState[i][j+1]===true){if(j+2<this.state.boardSizeArray[i]&&this.state.boardState[i][j+2]===true){this.setState({gameOver:true,computerWins:false});win=true;}}}}}return win;}},{key:\"computersTurn\",value:function computersTurn(){var cur_heaps=this.calculateHeaps(this.state.boardState);var cur_nimsum=this.calculateNimSum(cur_heaps);//evaulate board state\nvar bruteForce=[];for(var i=0;i<this.state.boardState.length;i++){var temp=[];for(var j=0;j<this.state.boardState[i].length;j++){temp.push(this.state.boardState[i][j]);}bruteForce.push(temp);}//brute force method to try and find best bestMove\nfor(var _i=0;_i<this.state.numberOfBoards;_i++){for(var _j=0;_j<this.state.boardSizeArray[_i];_j++){var sentinel=true;if(bruteForce[_i][_j]===true){sentinel=false;}if(_j-1>-1){if(bruteForce[_i][_j-1]===true){sentinel=false;}}if(_j-2>-1){if(bruteForce[_i][_j-2]===true){sentinel=false;}}if(_j+1<bruteForce[_i].length){if(bruteForce[_i][_j+1]===true){sentinel=false;}}if(_j+2<bruteForce[_i].length){if(bruteForce[_i][_j+2]===true){sentinel=false;}}var winningMove=this.doesWinningMoveExist();if(winningMove[0]!==-1){var tempBoardState=this.state.boardState;tempBoardState[winningMove[0]][winningMove[1]]=true;this.setState({boardState:tempBoardState,gameOver:true,computerWins:true});return;}if(sentinel){bruteForce[_i][_j]=true;var heaps=this.calculateHeaps(bruteForce);var nimsum=this.calculateNimSum(heaps);if(nimsum===0){//we found our move\nvar _tempBoardState=this.state.boardState;_tempBoardState[_i][_j]=true;this.setState({boardState:_tempBoardState});return;}else{bruteForce[_i][_j]=false;}}}}//we have found zero moves to reduce game to zero sum. make first available move that does not immediately lose the game\nfor(var _i2=0;_i2<this.state.numberOfBoards;_i2++){for(var _j2=0;_j2<this.state.boardSizeArray[_i2];_j2++){var _sentinel=true;if(bruteForce[_i2][_j2]===true){_sentinel=false;}if(_j2-1>-1){if(bruteForce[_i2][_j2-1]===true){_sentinel=false;}}if(_j2-2>-1){if(bruteForce[_i2][_j2-2]===true){_sentinel=false;}}if(_j2+1<bruteForce[_i2].length){if(bruteForce[_i2][_j2+1]===true){_sentinel=false;}}if(_j2+2<bruteForce[_i2].length){if(bruteForce[_i2][_j2+2]===true){_sentinel=false;}}if(_sentinel){var _tempBoardState2=this.state.boardState;_tempBoardState2[_i2][_j2]=true;this.setState({boardState:_tempBoardState2});return;}}}//we have found zero moves we can do that will not immediately lose the game. time for the computer to lose, gg player.\nfor(var _i3=0;_i3<this.state.numberOfBoards;_i3++){for(var _j3=0;_j3<this.state.boardSizeArray[_i3];_j3++){if(bruteForce[_i3][_j3]!==true){var _tempBoardState3=this.state.boardState;_tempBoardState3[_i3][_j3]=true;this.setState({boardState:_tempBoardState3});return;}}}}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(IonHeader,null,/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonTitle,null,\"Treblecross\"))),/*#__PURE__*/React.createElement(IonContent,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Math 576 Final Project of Justin Taylor, Javier Doward, David Munn Carstensen\"),/*#__PURE__*/React.createElement(IonItem,{id:\"rangeSliderItem\"},/*#__PURE__*/React.createElement(IonRange,{id:\"rangeSlider\",onIonChange:function onIonChange(e){_this2.setState({numberOfBoards:e.detail.value});},min:1,max:5,step:1,snaps:true,color:\"secondary\"})),/*#__PURE__*/React.createElement(\"h2\",{id:\"numBoardsLabel\"},\"Number of Treblecross boards selected: \",+this.state.numberOfBoards),/*#__PURE__*/React.createElement(IonButton,{id:\"generateBoards\",onClick:function onClick(){_this2.generateTrebleCrossBoard();}},\"Generate Boards / Play Again\"),this.state.boardState.map(function(Board,boardIndex){return/*#__PURE__*/React.createElement(\"div\",{className:\"board\",key:boardIndex},Board.map(function(Square,squareIndex){return/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){_this2.updateBoardState(boardIndex,squareIndex);},key:boardIndex.toString()+\",\"+squareIndex.toString(),className:\"square\"},Square?'X':'');}));}),this.state.gameOver?/*#__PURE__*/React.createElement(\"h2\",{id:\"gameOverMessage\"},\"The game is over! \",this.state.computerWins?'The computer has won!':'You have won!'):undefined));}}]);return Home;}(React.Component);export default Home;","map":{"version":3,"sources":["/home/stin/School/Treblecross/src/pages/Home.tsx"],"names":["IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonItem","IonRange","IonButton","React","Home","props","state","numberOfBoards","boardState","boardSizeArray","boardBruteForce","gameOver","computerWins","generateTrebleCrossBoard","bind","updateBoardState","computersTurn","calculateHeaps","calculateNimSum","doesWinningMoveExist","tempBoardSizeArray","tempBoardState","i","push","Math","floor","random","Array","fill","setState","boardIndex","squareIndex","win","didPlayerWin","evaluationArray","tempEvalArray","heapSize","j","heapValues","nimValueArray","map","board_heaps","heap","sum","length","sentinel","winningMove","cur_heaps","cur_nimsum","bruteForce","temp","heaps","nimsum","e","detail","value","Board","Square","toString","undefined","Component"],"mappings":"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","sourcesContent":["import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonItem, IonRange, IonButton } from '@ionic/react';\nimport React from 'react';\nimport ExploreContainer from '../components/ExploreContainer';\nimport './Home.css';\n\ntype MyState = {\n  numberOfBoards: any;\n  boardState: boolean[][];\n  boardSizeArray: number[];\n  boardBruteForce: boolean[][];\n  gameOver: boolean;\n  computerWins: boolean;\n}\n\ntype MyProps = {\n\n}\n\nclass Home extends React.Component<MyProps,MyState> {\n  constructor(props: MyProps) {\n    super(props)\n\n    this.state = {\n      numberOfBoards: 1,\n      boardState: [],\n      boardSizeArray: [],\n      boardBruteForce: [],\n      gameOver: false,\n      computerWins: false\n    }\n\n    this.generateTrebleCrossBoard = this.generateTrebleCrossBoard.bind(this);\n    this.updateBoardState = this.updateBoardState.bind(this);\n    this.computersTurn = this.computersTurn.bind(this);\n    this.calculateHeaps = this.calculateHeaps.bind(this);\n    this.calculateNimSum = this.calculateNimSum.bind(this);\n    this.doesWinningMoveExist = this.doesWinningMoveExist.bind(this);\n  }\n\n\n\n\n  generateTrebleCrossBoard() {\n    let tempBoardSizeArray = []\n    let tempBoardState = []\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n      //creates a board of size 1 to 14\n      tempBoardSizeArray.push(Math.floor(Math.random() * Math.floor(8))+5)\n      tempBoardState.push(new Array(tempBoardSizeArray[i]).fill(false))\n    }\n    this.setState({boardState: tempBoardState, boardSizeArray: tempBoardSizeArray, gameOver: false, computerWins: false})\n\n  }\n\n  updateBoardState(boardIndex: number, squareIndex: number) {\n    if(this.state.boardState[boardIndex][squareIndex] !== true && this.state.gameOver !== true) {\n      let tempBoardState = this.state.boardState;\n      tempBoardState[boardIndex][squareIndex] = true;\n      this.setState({boardState: tempBoardState})\n      let win = this.didPlayerWin()\n      if(win != true) {\n        this.computersTurn()\n      }\n\n    }\n  }\n\n  calculateHeaps(boardState: boolean[][]) : number[][]{\n    let evaluationArray = []\n    let tempEvalArray : number[] = []\n    let heapSize : number = 0;\n    //need to see all heaps\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n      heapSize = 0;\n      for(let j = 0; j < this.state.boardSizeArray[i]; j++) {\n        if(boardState[i][j] === false) {\n          heapSize = heapSize + 1;\n          if(j === 0) {\n            heapSize = heapSize + 1;\n          }\n        } else {\n          //we hit an X\n          if(heapSize !== 0) {\n            heapSize = heapSize - 1;\n          }\n          if(heapSize !== 0) {\n            tempEvalArray.push(heapSize);\n          }\n          heapSize = -1;\n        }\n      }\n      if(heapSize === this.state.boardSizeArray[i]) {\n        heapSize = heapSize + 2;\n        tempEvalArray.push(heapSize);\n        heapSize = 0;\n      } else {\n        if(heapSize !== 0 && heapSize !== -1) {\n          heapSize = heapSize + 1;\n          tempEvalArray.push(heapSize);\n          heapSize = 0;\n        }\n      }\n      evaluationArray.push(tempEvalArray)\n      tempEvalArray = []\n    }\n\n    return evaluationArray\n  }\n\n  calculateNimSum(evaluationArray: number[][]) : number {\n    let heapValues = [0,0,0,1,1,1,2,2,0,3,3,1,1,1,0]\n    let nimValueArray = evaluationArray.map(board_heaps => {\n      return board_heaps.map(heap => {\n        return heapValues[heap]\n      })\n    })\n\n    let sum = 0\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n      for(let j = 0; j < nimValueArray[i].length; j++) {\n        if(nimValueArray[i][j]) {\n          sum = sum^nimValueArray[i][j]\n        }\n      }\n    }\n    return sum;\n  }\n\n  doesWinningMoveExist() : number[] {\n    let sentinel = true\n    let winningMove = [-1,-1]\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n\n      for(let j = 0; j < this.state.boardSizeArray[i]; j++) {\n        if(this.state.boardState[i][j] === true) {\n          if(j - 1 > -1) {\n            if(this.state.boardState[i][j-1] === true) {\n              sentinel = false;\n              if(j - 2 > -1) {\n                winningMove = [i,j-2]\n              } else {\n                winningMove = [i,j+1]\n              }\n            }\n          }\n          if(j - 2 > -1) {\n            if(this.state.boardState[i][j-2] === true) {\n              sentinel = false;\n              winningMove = [i,j-1]\n            }\n          }\n          if(j+1 < this.state.boardState[i].length) {\n            if(this.state.boardState[i][j+1] === true) {\n              sentinel = false;\n              if(j+2 < this.state.boardState[i].length) {\n                winningMove = [i,j+2]\n              } else {\n                winningMove = [i,j-1]\n              }\n            }\n          }\n          if(j+2 < this.state.boardState[i].length) {\n            if(this.state.boardState[i][j+2] === true) {\n              sentinel = false;\n              winningMove = [i,j+1]\n            }\n          }\n        }\n      }\n    }\n    return winningMove\n  }\n\n  didPlayerWin() : boolean {\n    let win = false;\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n      for(let j = 0; j < this.state.boardSizeArray[i]; j++) {\n        if(this.state.boardState[i][j] === true) {\n          if(j + 1 < this.state.boardSizeArray[i] && this.state.boardState[i][j+1] === true) {\n            if(j + 2 < this.state.boardSizeArray[i] && this.state.boardState[i][j+2] === true) {\n              this.setState({gameOver: true, computerWins: false})\n              win = true\n            }\n          }\n        }\n      }\n    }\n    return win\n  }\n\n  computersTurn() {\n\n    let cur_heaps = this.calculateHeaps(this.state.boardState)\n    let cur_nimsum = this.calculateNimSum(cur_heaps)\n    //evaulate board state\n    let bruteForce : boolean[][]= []\n    for(let i = 0; i < this.state.boardState.length; i++) {\n      let temp = []\n      for(let j = 0 ; j < this.state.boardState[i].length; j++) {\n        temp.push(this.state.boardState[i][j])\n      }\n      bruteForce.push(temp)\n    }\n\n    //brute force method to try and find best bestMove\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n\n      for(let j = 0; j < this.state.boardSizeArray[i]; j++) {\n        let sentinel = true\n              if(bruteForce[i][j] === true) {\n                sentinel = false;\n              }\n              if(j - 1 > -1) {\n                if(bruteForce[i][j-1] === true) {\n                  sentinel = false;\n                }\n              }\n              if(j - 2 > -1) {\n                if(bruteForce[i][j-2] === true) {\n                  sentinel = false;\n                }\n              }\n              if(j+1 < bruteForce[i].length) {\n                if(bruteForce[i][j+1] === true) {\n                  sentinel = false;\n                }\n              }\n              if(j+2 < bruteForce[i].length) {\n                if(bruteForce[i][j+2] === true) {\n                  sentinel = false;\n                }\n              }\n              let winningMove = this.doesWinningMoveExist()\n              if(winningMove[0] !== -1) {\n\n                let tempBoardState = this.state.boardState;\n                tempBoardState[winningMove[0]][winningMove[1]] = true;\n                this.setState({boardState: tempBoardState, gameOver: true, computerWins: true})\n                return;\n              }\n\n              if(sentinel) {\n                bruteForce[i][j] = true\n                let heaps = this.calculateHeaps(bruteForce)\n                let nimsum = this.calculateNimSum(heaps)\n                if(nimsum === 0) {\n                  //we found our move\n                  let tempBoardState = this.state.boardState;\n                  tempBoardState[i][j] = true;\n                  this.setState({boardState: tempBoardState})\n                  return;\n                } else {\n                  bruteForce[i][j] = false\n\n          }\n        }\n      }\n    }\n    //we have found zero moves to reduce game to zero sum. make first available move that does not immediately lose the game\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n\n      for(let j = 0; j < this.state.boardSizeArray[i]; j++) {\n        let sentinel = true\n              if(bruteForce[i][j] === true) {\n                sentinel = false;\n              }\n              if(j - 1 > -1) {\n                if(bruteForce[i][j-1] === true) {\n                  sentinel = false;\n                }\n              }\n              if(j - 2 > -1) {\n                if(bruteForce[i][j-2] === true) {\n                  sentinel = false;\n                }\n              }\n              if(j+1 < bruteForce[i].length) {\n                if(bruteForce[i][j+1] === true) {\n                  sentinel = false;\n                }\n              }\n              if(j+2 < bruteForce[i].length) {\n                if(bruteForce[i][j+2] === true) {\n                  sentinel = false;\n                }\n              }\n\n              if(sentinel) {\n                let tempBoardState = this.state.boardState;\n                tempBoardState[i][j] = true;\n                this.setState({boardState: tempBoardState})\n                return;\n        }\n      }\n    }\n\n    //we have found zero moves we can do that will not immediately lose the game. time for the computer to lose, gg player.\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n\n      for(let j = 0; j < this.state.boardSizeArray[i]; j++) {\n        if(bruteForce[i][j] !== true) {\n          let tempBoardState = this.state.boardState;\n          tempBoardState[i][j] = true;\n          this.setState({boardState: tempBoardState})\n          return;\n        }\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <IonPage>\n        <IonHeader>\n          <IonToolbar>\n            <IonTitle>Treblecross</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n        <h2>Math 576 Final Project of Justin Taylor, Javier Doward, David Munn Carstensen</h2>\n\n          <IonItem id='rangeSliderItem'>\n            <IonRange id='rangeSlider' onIonChange={e => {this.setState({numberOfBoards: e.detail.value})}} min={1} max={5} step={1} snaps={true} color=\"secondary\" />\n          </IonItem>\n          <h2 id='numBoardsLabel'>Number of Treblecross boards selected: {+ this.state.numberOfBoards}</h2>\n          <IonButton id='generateBoards' onClick={() => {this.generateTrebleCrossBoard()}}>Generate Boards / Play Again</IonButton>\n\n          {this.state.boardState.map((Board, boardIndex) => <div className='board' key={boardIndex}>{\n            Board.map((Square, squareIndex) =>\n              <button onClick={() => {this.updateBoardState(boardIndex, squareIndex)}} key={boardIndex.toString() + \",\" + squareIndex.toString()} className=\"square\">{Square ? 'X' : ''}</button>\n            )\n          }</div>\n          )}\n\n          {this.state.gameOver ? <h2 id='gameOverMessage'>The game is over! {this.state.computerWins ? 'The computer has won!' : 'You have won!'}</h2> : undefined}\n\n        </IonContent>\n      </IonPage>\n    );\n  }\n}\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}