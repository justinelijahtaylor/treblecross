{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","pages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Home","props","state","numberOfBoards","boardState","boardSizeArray","boardBruteForce","gameOver","computerWins","generateTrebleCrossBoard","bind","updateBoardState","computersTurn","calculateHeaps","calculateNimSum","doesWinningMoveExist","tempBoardSizeArray","tempBoardState","i","this","push","Math","floor","random","Array","fill","setState","boardIndex","squareIndex","didPlayerWin","evaluationArray","tempEvalArray","heapSize","j","heapValues","nimValueArray","board_heaps","heap","sum","length","winningMove","win","cur_heaps","bruteForce","temp","sentinel","heaps","onIonChange","detail","value","min","max","step","snaps","color","onClick","Board","className","key","Square","toString","undefined","React","Component","App","path","component","exact","render","to","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kIAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,0BAA2B,CAC1B,GACA,IAED,6BAA8B,CAC7B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,wBAAyB,CACxB,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,sBAAuB,CACtB,GACA,IAED,uBAAwB,CACvB,GACA,IAED,4BAA6B,CAC5B,GACA,IAED,uBAAwB,CACvB,GACA,IAED,qBAAsB,CACrB,GACA,IAED,mCAAoC,CACnC,GACA,IAED,uBAAwB,CACvB,GACA,IAED,+BAAgC,CAC/B,GACA,IAED,wBAAyB,CACxB,GACA,IAED,yBAA0B,CACzB,GACA,IAED,wBAAyB,CACxB,GACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.59dd46bb.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t80,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t81,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t82,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t83,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t84,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t85,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t86,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t87,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t88,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t89,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t90,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t91,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t92,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t93,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t94,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t95,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t96,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t97,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t98,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t99,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t100,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t101,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t102,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t103,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t104,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t105,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t106,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t107,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t108,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t109,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t110,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t111,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t112,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t113,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t114,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t115,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t116,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t117,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t118,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t119,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t120,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t121,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t122,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 59;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t124,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 61;\nmodule.exports = webpackAsyncContext;","import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonItem, IonRange, IonButton } from '@ionic/react';\nimport React from 'react';\nimport ExploreContainer from '../components/ExploreContainer';\nimport './Home.css';\n\ntype MyState = {\n  numberOfBoards: any;\n  boardState: boolean[][];\n  boardSizeArray: number[];\n  boardBruteForce: boolean[][];\n  gameOver: boolean;\n  computerWins: boolean;\n}\n\ntype MyProps = {\n\n}\n\nclass Home extends React.Component<MyProps,MyState> {\n  constructor(props: MyProps) {\n    super(props)\n\n    this.state = {\n      numberOfBoards: 1,\n      boardState: [],\n      boardSizeArray: [],\n      boardBruteForce: [],\n      gameOver: false,\n      computerWins: false\n    }\n\n    this.generateTrebleCrossBoard = this.generateTrebleCrossBoard.bind(this);\n    this.updateBoardState = this.updateBoardState.bind(this);\n    this.computersTurn = this.computersTurn.bind(this);\n    this.calculateHeaps = this.calculateHeaps.bind(this);\n    this.calculateNimSum = this.calculateNimSum.bind(this);\n    this.doesWinningMoveExist = this.doesWinningMoveExist.bind(this);\n  }\n\n\n\n\n  generateTrebleCrossBoard() {\n    let tempBoardSizeArray = []\n    let tempBoardState = []\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n      //creates a board of size 1 to 14\n      tempBoardSizeArray.push(Math.floor(Math.random() * Math.floor(8))+5)\n      tempBoardState.push(new Array(tempBoardSizeArray[i]).fill(false))\n    }\n    this.setState({boardState: tempBoardState, boardSizeArray: tempBoardSizeArray, gameOver: false, computerWins: false})\n\n  }\n\n  updateBoardState(boardIndex: number, squareIndex: number) {\n    if(this.state.boardState[boardIndex][squareIndex] !== true && this.state.gameOver !== true) {\n      let tempBoardState = this.state.boardState;\n      tempBoardState[boardIndex][squareIndex] = true;\n      this.setState({boardState: tempBoardState})\n      let win = this.didPlayerWin()\n      if(win != true) {\n        this.computersTurn()\n      }\n\n    }\n  }\n\n  calculateHeaps(boardState: boolean[][]) : number[][]{\n    let evaluationArray = []\n    let tempEvalArray : number[] = []\n    let heapSize : number = 0;\n    //need to see all heaps\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n      heapSize = 0;\n      for(let j = 0; j < this.state.boardSizeArray[i]; j++) {\n        if(boardState[i][j] === false) {\n          heapSize = heapSize + 1;\n          if(j === 0) {\n            heapSize = heapSize + 1;\n          }\n        } else {\n          //we hit an X\n          if(heapSize !== 0) {\n            heapSize = heapSize - 1;\n          }\n          if(heapSize !== 0) {\n            tempEvalArray.push(heapSize);\n          }\n          heapSize = -1;\n        }\n      }\n      if(heapSize === this.state.boardSizeArray[i]) {\n        heapSize = heapSize + 2;\n        tempEvalArray.push(heapSize);\n        heapSize = 0;\n      } else {\n        if(heapSize !== 0 && heapSize !== -1) {\n          heapSize = heapSize + 1;\n          tempEvalArray.push(heapSize);\n          heapSize = 0;\n        }\n      }\n      evaluationArray.push(tempEvalArray)\n      tempEvalArray = []\n    }\n\n    return evaluationArray\n  }\n\n  calculateNimSum(evaluationArray: number[][]) : number {\n    let heapValues = [0,0,0,1,1,1,2,2,0,3,3,1,1,1,0]\n    let nimValueArray = evaluationArray.map(board_heaps => {\n      return board_heaps.map(heap => {\n        return heapValues[heap]\n      })\n    })\n\n    let sum = 0\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n      for(let j = 0; j < nimValueArray[i].length; j++) {\n        if(nimValueArray[i][j]) {\n          sum = sum^nimValueArray[i][j]\n        }\n      }\n    }\n    return sum;\n  }\n\n  doesWinningMoveExist() : number[] {\n    let sentinel = true\n    let winningMove = [-1,-1]\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n\n      for(let j = 0; j < this.state.boardSizeArray[i]; j++) {\n        if(this.state.boardState[i][j] === true) {\n          if(j - 1 > -1) {\n            if(this.state.boardState[i][j-1] === true) {\n              sentinel = false;\n              if(j - 2 > -1) {\n                winningMove = [i,j-2]\n              } else {\n                winningMove = [i,j+1]\n              }\n            }\n          }\n          if(j - 2 > -1) {\n            if(this.state.boardState[i][j-2] === true) {\n              sentinel = false;\n              winningMove = [i,j-1]\n            }\n          }\n          if(j+1 < this.state.boardState[i].length) {\n            if(this.state.boardState[i][j+1] === true) {\n              sentinel = false;\n              if(j+2 < this.state.boardState[i].length) {\n                winningMove = [i,j+2]\n              } else {\n                winningMove = [i,j-1]\n              }\n            }\n          }\n          if(j+2 < this.state.boardState[i].length) {\n            if(this.state.boardState[i][j+2] === true) {\n              sentinel = false;\n              winningMove = [i,j+1]\n            }\n          }\n        }\n      }\n    }\n    return winningMove\n  }\n\n  didPlayerWin() : boolean {\n    let win = false;\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n      for(let j = 0; j < this.state.boardSizeArray[i]; j++) {\n        if(this.state.boardState[i][j] === true) {\n          if(j + 1 < this.state.boardSizeArray[i] && this.state.boardState[i][j+1] === true) {\n            if(j + 2 < this.state.boardSizeArray[i] && this.state.boardState[i][j+2] === true) {\n              this.setState({gameOver: true, computerWins: false})\n              win = true\n            }\n          }\n        }\n      }\n    }\n    return win\n  }\n\n  computersTurn() {\n\n    let cur_heaps = this.calculateHeaps(this.state.boardState)\n    let cur_nimsum = this.calculateNimSum(cur_heaps)\n    //evaulate board state\n    let bruteForce : boolean[][]= []\n    for(let i = 0; i < this.state.boardState.length; i++) {\n      let temp = []\n      for(let j = 0 ; j < this.state.boardState[i].length; j++) {\n        temp.push(this.state.boardState[i][j])\n      }\n      bruteForce.push(temp)\n    }\n\n    //brute force method to try and find best bestMove\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n\n      for(let j = 0; j < this.state.boardSizeArray[i]; j++) {\n        let sentinel = true\n              if(bruteForce[i][j] === true) {\n                sentinel = false;\n              }\n              if(j - 1 > -1) {\n                if(bruteForce[i][j-1] === true) {\n                  sentinel = false;\n                }\n              }\n              if(j - 2 > -1) {\n                if(bruteForce[i][j-2] === true) {\n                  sentinel = false;\n                }\n              }\n              if(j+1 < bruteForce[i].length) {\n                if(bruteForce[i][j+1] === true) {\n                  sentinel = false;\n                }\n              }\n              if(j+2 < bruteForce[i].length) {\n                if(bruteForce[i][j+2] === true) {\n                  sentinel = false;\n                }\n              }\n              let winningMove = this.doesWinningMoveExist()\n              if(winningMove[0] !== -1) {\n\n                let tempBoardState = this.state.boardState;\n                tempBoardState[winningMove[0]][winningMove[1]] = true;\n                this.setState({boardState: tempBoardState, gameOver: true, computerWins: true})\n                return;\n              }\n\n              if(sentinel) {\n                bruteForce[i][j] = true\n                let heaps = this.calculateHeaps(bruteForce)\n                let nimsum = this.calculateNimSum(heaps)\n                if(nimsum === 0) {\n                  //we found our move\n                  let tempBoardState = this.state.boardState;\n                  tempBoardState[i][j] = true;\n                  this.setState({boardState: tempBoardState})\n                  return;\n                } else {\n                  bruteForce[i][j] = false\n\n          }\n        }\n      }\n    }\n    //we have found zero moves to reduce game to zero sum. make first available move that does not immediately lose the game\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n\n      for(let j = 0; j < this.state.boardSizeArray[i]; j++) {\n        let sentinel = true\n              if(bruteForce[i][j] === true) {\n                sentinel = false;\n              }\n              if(j - 1 > -1) {\n                if(bruteForce[i][j-1] === true) {\n                  sentinel = false;\n                }\n              }\n              if(j - 2 > -1) {\n                if(bruteForce[i][j-2] === true) {\n                  sentinel = false;\n                }\n              }\n              if(j+1 < bruteForce[i].length) {\n                if(bruteForce[i][j+1] === true) {\n                  sentinel = false;\n                }\n              }\n              if(j+2 < bruteForce[i].length) {\n                if(bruteForce[i][j+2] === true) {\n                  sentinel = false;\n                }\n              }\n\n              if(sentinel) {\n                let tempBoardState = this.state.boardState;\n                tempBoardState[i][j] = true;\n                this.setState({boardState: tempBoardState})\n                return;\n        }\n      }\n    }\n\n    //we have found zero moves we can do that will not immediately lose the game. time for the computer to lose, gg player.\n    for(let i = 0; i < this.state.numberOfBoards; i++) {\n\n      for(let j = 0; j < this.state.boardSizeArray[i]; j++) {\n        if(bruteForce[i][j] !== true) {\n          let tempBoardState = this.state.boardState;\n          tempBoardState[i][j] = true;\n          this.setState({boardState: tempBoardState})\n          return;\n        }\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <IonPage>\n        <IonHeader>\n          <IonToolbar>\n            <IonTitle>Treblecross</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n        <h2>Math 576 Final Project of Justin Taylor, Javier Doward, David Munn Carstensen</h2>\n\n          <IonItem id='rangeSliderItem'>\n            <IonRange id='rangeSlider' onIonChange={e => {this.setState({numberOfBoards: e.detail.value})}} min={1} max={5} step={1} snaps={true} color=\"secondary\" />\n          </IonItem>\n          <h2 id='numBoardsLabel'>Number of Treblecross boards selected: {+ this.state.numberOfBoards}</h2>\n          <IonButton id='generateBoards' onClick={() => {this.generateTrebleCrossBoard()}}>Generate Boards / Play Again</IonButton>\n\n          {this.state.boardState.map((Board, boardIndex) => <div className='board' key={boardIndex}>{\n            Board.map((Square, squareIndex) =>\n              <button onClick={() => {this.updateBoardState(boardIndex, squareIndex)}} key={boardIndex.toString() + \",\" + squareIndex.toString()} className=\"square\">{Square ? 'X' : ''}</button>\n            )\n          }</div>\n          )}\n\n          {this.state.gameOver ? <h2 id='gameOverMessage'>The game is over! {this.state.computerWins ? 'The computer has won!' : 'You have won!'}</h2> : undefined}\n\n        </IonContent>\n      </IonPage>\n    );\n  }\n}\n\n\nexport default Home;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport Home from './pages/Home';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n      <IonRouterOutlet>\n        <Route path=\"/home\" component={Home} exact={true} />\n        <Route exact path=\"/\" render={() => <Redirect to=\"/home\" />} />\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}